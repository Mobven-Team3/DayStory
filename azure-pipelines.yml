trigger:
- main

pool:
  name: Default
  demands:
  - agent.name -equals test-deneme

variables:
  token: "sqa_d61401827f15434a1621ea98e4a8914a8086f822"

steps:
- script: |
    dotnet sonarscanner begin /k:"DayStory-Api-_T3__DayStory-Api-_T3__3a191493-fd8f-4bbf-9b75-952356eb4485" /d:sonar.host.url="http://localhost:9000" /d:sonar.token="$(token)"
  displayName: 'SonarQube Begin'

- script: |
    dotnet build
  displayName: 'Build'

- script: |
    dotnet publish DayStory.Application/DayStory.Application.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.Domain/DayStory.Domain.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.Infrastructure/DayStory.Infrastructure.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.WebAPI/DayStory.WebAPI.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.Common/DayStory.Common.csproj -f net8.0 -c Release --self-contained -r linux-x64
  displayName: 'Publish'

- task: SSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    runOptions: 'commands'
    commands: |
      systemctl stop DayStory-Application.service
      systemctl stop DayStory-Domain.service
      systemctl stop DayStory-Infrastructure.service
      systemctl stop DayStory-WebAPI.service
      systemctl stop DayStory-Common.service
    readyTimeout: '20000'
  displayName: 'Service-Stop'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    sourceFolder: '$(Pipeline.Workspace)/s/DayStory.Application/bin/Release/net8.0/linux-x64/publish/'
    contents: '**'
    targetFolder: '/var/www/DayStory/DayStory.Application'
    readyTimeout: '20000'
  displayName: 'CopyFilesOverSSH'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    sourceFolder: '$(Pipeline.Workspace)/s/DayStory.Domain/bin/Release/net8.0/linux-x64/publish/'
    contents: '**'
    targetFolder: '/var/www/DayStory/DayStory.Domain'
    readyTimeout: '20000'
  displayName: 'CopyFilesOverSSH'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    sourceFolder: '$(Pipeline.Workspace)/s/DayStory.Infrastructure/bin/Release/net8.0/linux-x64/publish/'
    contents: '**'
    targetFolder: '/var/www/DayStory/DayStory.Infrastructure'
    readyTimeout: '20000'
  displayName: 'CopyFilesOverSSH'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    sourceFolder: '$(Pipeline.Workspace)/s/DayStory.WebAPI/bin/Release/net8.0/linux-x64/publish/'
    contents: '**'
    targetFolder: '/var/www/DayStory/DayStory.WebAPI'
    readyTimeout: '20000'
  displayName: 'CopyFilesOverSSH'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    sourceFolder: '$(Pipeline.Workspace)/s/DayStory.Common/bin/Release/net8.0/linux-x64/publish/'
    contents: '**'
    targetFolder: '/var/www/DayStory/DayStory.Common'
    readyTimeout: '20000'
  displayName: 'CopyFilesOverSSH'

- task: SSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    runOptions: 'commands'
    commands: |
      systemctl start DayStory-Application.service
      systemctl start DayStory-Domain.service
      systemctl start DayStory-Infrastructure.service
      systemctl start DayStory-WebAPI.service
      systemctl start DayStory-Common.service
    readyTimeout: '20000'
  displayName: 'Service-Start'

- task: SSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    runOptions: 'commands'
    commands: |
      systemctl start DayStory-Application.service  > outputdsApplication.txt || true
      cat outputdsApplication.txt
      systemctl start DayStory-Domain.service > outputdsdomain.txt || true
      cat outputdsdomain.txt
      systemctl start DayStory-Infrastructure.service > outputdsinfrastructure.txt || true
      cat outputdsinfrastructure.txt
      systemctl start DayStory-WebAPI.service > outputdswebapi.txt || true
      cat outputdswebapi.txt
      systemctl start DayStory-Common.service > outputdscommon.txt || true
      cat outputdscommon.txt
    readyTimeout: '20000'
  displayName: 'Service-Status'

- script: |
    dotnet sonarscanner end /d:sonar.token="$(token)"
  displayName: 'SonarQube End'
