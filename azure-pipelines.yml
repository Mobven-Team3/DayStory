trigger:
- main

pool:
  name: Default
  demands:
  - agent.name -equals test-deneme

variables:
  token: "sqa_d61401827f15434a1621ea98e4a8914a8086f822"

steps:
- script: |
    dotnet sonarscanner begin /k:"DayStory-Api-_T3__DayStory-Api-_T3__3a191493-fd8f-4bbf-9b75-952356eb4485" /d:sonar.host.url="http://localhost:9000" /d:sonar.token="$(token)"
  displayName: 'SonarQube Begin'

- script: |
    dotnet build
  displayName: 'Build'

- script: |
    dotnet publish DayStory.Application/DayStory.Application.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.Domain/DayStory.Domain.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.Infrastructure/DayStory.Infrastructure.csproj -f net8.0 -c Release --self-contained -r linux-x64
    dotnet publish DayStory.WebAPI/DayStory.WebAPI.csproj -f net8.0 -c Release --self-contained -r linux-x64
  displayName: 'Publish'

- task: SSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    runOptions: 'commands'
    commands: 'echo "2jTyQK##S5N$jC" | sudo -S systemctl stop apiteam3-daystory.service 2> /dev/null'
    readyTimeout: '20000'
  displayName: 'Service-Stop'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    sourceFolder: '$(Pipeline.Workspace)/s/DayStory.Application/bin/Release/net8.0/linux-x64/publish/'
    contents: '**'
    targetFolder: '/var/www/DayStory'
    readyTimeout: '20000'
  displayName: 'CopyFilesOverSSH'

- task: SSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    runOptions: 'commands'
    commands: 'echo "2jTyQK##S5N$jC" | sudo -S systemctl start apiteam3-daystory.service 2> /dev/null'
    readyTimeout: '20000'
  displayName: 'Service-Start'

- task: SSH@0
  inputs:
    sshEndpoint: 'mobven-ssh'
    runOptions: 'commands'
    commands: 'echo "2jTyQK##S5N$jC" | sudo -S systemctl status apiteam3-daystory.service 2> /dev/null'
    readyTimeout: '20000'
  displayName: 'Service-Status'

- script: |
    dotnet sonarscanner end /d:sonar.token="$(token)"
  displayName: 'SonarQube End'
